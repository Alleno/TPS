@using System.Collections
@using Microsoft.AspNetCore.Mvc.Rendering
@using TPS.Core.Models
@using TPS.MVC.Extensions
@using Task = System.Threading.Tasks.Task
@model TPS.Core.Models.TaskOrder

@{
    ViewData["Title"] = "Details";
}

<h2>Task Orders and Amendments</h2>


<h4>Original Task Order</h4>
<div>
    <div class="row">
        <hr />
        <div class="col-md-9">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.DateApproval)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.DateApproval)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.DatePlacedOnContract)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.DatePlacedOnContract)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Title)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Title)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Abstract)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Abstract)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Objective)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Objective)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.TaskNumber)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.TaskNumber)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ApprovalStatus)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.ApprovalStatus.Name)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ProjectNumber)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.ProjectNumber)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Funding.FundingAmount)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Funding.FundingAmount)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Funding.FundingCategory)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Funding.FundingCategory.Name)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.DateSignedBySponsor)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.DateSignedBySponsor)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.DateStart)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.DateStart)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.DateEnd)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.DateEnd)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.AnticipatedAudience)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.AnticipatedAudience.Name)
                </dd>
                
                <dt>
                    @Html.DisplayNameFor(model => model.VisibilityLevel)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.VisibilityLevel.Name)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ApprovalStatus)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.ApprovalStatus.Name)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Sponsor)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Sponsor.Name)
                </dd>
            </dl>
        </div>
        <div class="col-md-3">
            @foreach (var deliverable in Model.Deliverables.EnsureNotNull().Select((x, i) => new { Value = x, Index = i }))
            {
                string deliverableId = $"deliverable{deliverable.Index}";
                @Html.Partial("~/Views/Deliverables/Details.cshtml", deliverable.Value)
                <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#@deliverableId">Open Modal</button>
                <a class="btn btn-danger" asp-controller="Deliverables" asp-action="Delete" asp-route-id="@deliverable.Value.Id">Delete</a>
            }
        </div>
    </div>
    <div>
        <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model.Id">Edit Task Order</a> |
        <a class="btn btn-primary" asp-controller="Deliverables" asp-action="Create">Add Deliverable</a>
        <a asp-action="Index">Back to List</a>
    </div>
</div>
<hr />

@foreach (var amendment in Model.Amendments.EnsureNotNull().Select((x, i) => new { Value = x, Index = i }))
{
    string amendmentId = $"amendment{amendment.Index}";
    <div class="row">
        <div class="col-md-6">
            @Html.Partial("~/Views/Amendments/Details.cshtml", amendment.Value)
        </div>
        <div class="col-md-6">
            @foreach (var deliverable in amendment.Value.Deliverables.EnsureNotNull().Select((x, i) => new { Value = x, Index = i }))
            {
                @Html.Partial("~/Views/Deliverables/Details.cshtml", deliverable.Value)
                <button class="btn btn-primary open-modal"
                        data-toggle="modal"
                        data-target="#modalId"
                        data-controller="Deliverables"
                        data-action="Edit"
                        data-id="@deliverable.Value.Id">Edit Deliverable</button>
                @: |
                <a class="btn btn-danger" 
                   asp-controller="Deliverables" 
                   asp-action="Delete" 
                   asp-route-id="@deliverable.Value.Id">Delete</a>
            }
        </div>
    </div>
    <div>
        <button class="btn btn-primary open-modal" 
                data-toggle="modal" 
                data-target="#modalId"
                data-controller="Amendments"
                data-action="Edit"
                data-id="@amendment.Value.Id">Edit Amendment</button> |

        <button class="btn btn-primary open-modal"
                data-toggle="modal"
                data-target="#modalId"
                data-controller="Deliverables"
                data-action="Create"
                data-contract-id="@amendment.Value.Id">Create Deliverable</button> |

        <a class="btn btn-danger" asp-controller="Amendments" asp-action="Delete" asp-route-id="@amendment.Value.Id">Delete</a>
    </div>

}

<hr />
<div>
    <button class="btn btn-primary open-modal" 
            data-toggle="modal" 
            data-target="#modalId"
            data-controller="Amendments"
            data-action="Create"
            data-task-order-id="@Model.Id">Create Amendment</button> |
</div>

@section Modals {
    <modal id="modalId" title="Form">
    </modal>
}

@section Scripts {
    <script>

        $(document).ready(function () {
            $("form").each(function (index, form) {
                form.removeData('validator');
                form.removeData('unobtrusiveValidation');
                $.validator.unobtrusive.parse(form);
            });
        });

        function openDialog(controller, action, id, taskOrderId, contractId) {
            var data = {
                Id: id,
                taskOrderId: taskOrderId,
                contractId: contractId
            };
            $.ajax({
                method: "GET",
                url: '/' + controller + '/' + action,
                contentType: 'application/html',
                data: data,
                success: function (content) {
                    $('#modalId').find(".modal-body").html($.parseHTML(content));
                    const form = $("form");
                    form.removeData("validator")    // Added by the raw jQuery Validate
                        .removeData("unobtrusiveValidation");   // Added by jQuery Unobtrusive Validation
                    $.validator.unobtrusive.parse(form);
                },
                error: function (e) { }
            });
        }

        $(".open-modal").on("click",
            function() {
                openDialog($(this).data('controller'), $(this).data('action'), $(this).data('id'), $(this).data('task-order-id'), $(this).data('contract-id'));
            });
    </script>
}